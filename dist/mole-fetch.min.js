"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),MoleFetch=function(){function e(){_classCallCheck(this,e),this.prefix="bgfetch-",this.debug=!0}return _createClass(e,[{key:"onResponse",value:function(e){return new Promise(function(t,n){navigator.serviceWorker.addEventListener("message",function(n){var r=JSON.parse(n.data);r.taskName===e&&t(r.result)})})}},{key:"sendRequest",value:function(e,t,n,r){var a=this;return navigator.serviceWorker.ready.then(function(o){a.logDebug("ServiceWorker is Ready");var u={url:t,method:r,body:n};a.logDebug("Save request to LocalForage ["+a.prefix+e+"]"),localforage.setItem(a.prefix+e,JSON.stringify(u)).then(function(){a.logDebug("Register sync ["+a.prefix+e+"]"),a.registerSync(e)})})}},{key:"registerSync",value:function(e){var t=this;return navigator.serviceWorker.ready.then(function(n){n.sync.register(t.prefix+e).then(function(){t.updateTaskStatus(e,"requested")})})}},{key:"getCacheResponse",value:function(e,t){var n=this;return new Promise(function(r,a){localforage||a("localForage is required.");var o=n.prefix+e+"-result";localforage.getItem(o).then(function(a){a?(localforage.removeItem(o),n.updateTaskStatus(e,"completed"),a.time<=t||!t?(n.logDebug("Found cache for ["+e+"]"),r(a.result)):(n.logDebug("Found cache but Expired ["+e+"]"),r(!1))):(n.logDebug("Not found cache ["+e+"]"),r(!1))})})}},{key:"initBackgroudfetch",value:function(e){var t=this;e.tag.indexOf(this.prefix)!==-1&&(this.logDebug("Found bgfetch request ["+e.tag+"]"),localforage.getItem(e.tag).then(function(n){var r=t.makeFetchConfig(n);t.logDebug("Begin fetch request ["+e.tag+"]");var a=e.tag.replace(t.prefix,"");t.updateTaskStatus(a,"fetching"),t.makeFetch(r,e.tag,a)}))}},{key:"makeFetch",value:function(e,t,n){var r=this;return fetch(e.url,e.config).then(function(e){return e.text()}).then(function(e){r.logDebug("Fetch is Completed ["+t+"]"),localforage.removeItem(t);var a=e.replace(/(\r\n|\n|\r)/gm,"");r.logDebug("Publish data to client ["+t+"]"),r.publishResult(n,a)})}},{key:"makeFetchConfig",value:function(e){var t=JSON.parse(e);if(t){var n=t.url;return t.mode="cors",t.cache="default",{url:n,config:t}}}},{key:"publishResult",value:function(e,t,n){var r=this;this.logDebug("List client ["+this.prefix+e+"]"),self.clients.matchAll({includeUncontrolled:!0}).then(function(a){if(0==a.length||n===!0)r.updateTaskStatus(e,"cached"),r.saveResultWhenOffline(e,t);else{r.updateTaskStatus(e,"completed");var o=!0,u=!1,i=void 0;try{for(var s,c=a[Symbol.iterator]();!(o=(s=c.next()).done);o=!0){var l=s.value;r.postResult(e,t,l)}}catch(e){u=!0,i=e}finally{try{!o&&c.return&&c.return()}finally{if(u)throw i}}}})}},{key:"saveResultWhenOffline",value:function(e,t){var n=this;return new Promise(function(r,a){n.logDebug("client is offline save to LocalForage ["+n.prefix+e+"]"),localforage.setItem(n.prefix+e+"-result",{result:t,time:(new Date).getTime()/1e3}).then(function(){r({status:"success"})})})}},{key:"postResult",value:function(e,t,n){this.logDebug("Push to client "+n.id+" ["+this.prefix+e+"]");var r={result:t,taskName:e};n.postMessage(JSON.stringify(r))}},{key:"updateTaskStatus",value:function(e,t){var n=this;return new Promise(function(r,a){"completed"!==t?(localforage.setItem(n.prefix+e+"-status",t),r({status:"success"})):(localforage.removeItem(n.prefix+e+"-status"),r({status:"success"}))})}},{key:"getTaskStatus",value:function(e){var t=this;return new Promise(function(n,r){localforage.getItem(t.prefix+e+"-status").then(function(e){n(e)})})}},{key:"logDebug",value:function(e){this.debug===!0&&console.log(e)}}]),e}();